INFO  00:13:48,006 - Compiling source file: /home/tamarica/Documents/tamara/velika skola/8 semestar/PP1/projekat/projecat_2019_2020/MJCompiler/test/program6.mj
INFO  00:13:48,030 - #2 program
INFO  00:13:48,031 - #46 test302
INFO  00:13:48,031 - #46 int
INFO  00:13:48,031 - #46 niz
INFO  00:13:48,032 - #8 [
INFO  00:13:48,032 - #9 ]
INFO  00:13:48,032 - #5 ;
INFO  00:13:48,032 - #3 {
INFO  00:13:48,033 - #10 void
INFO  00:13:48,033 - #46 main
INFO  00:13:48,033 - #12 (
INFO  00:13:48,033 - #11 )
INFO  00:13:48,034 - #3 {
INFO  00:13:48,034 - #46 int
INFO  00:13:48,034 - #23 =
INFO  00:13:48,034 - #46 niz
INFO  00:13:48,035 - #5 ;
INFO  00:13:48,035 - #46 niz
INFO  00:13:48,036 - #23 =
INFO  00:13:48,036 - #48 c
INFO  00:13:48,036 - #5 ;
INFO  00:13:48,036 - #46 niz
INFO  00:13:48,036 - #23 =
INFO  00:13:48,036 - #46 null
INFO  00:13:48,036 - #5 ;
INFO  00:13:48,036 - #46 niz
INFO  00:13:48,036 - #23 =
INFO  00:13:48,036 - #36 new
INFO  00:13:48,036 - #46 int
INFO  00:13:48,037 - #8 [
INFO  00:13:48,037 - #47 5
INFO  00:13:48,037 - #9 ]
INFO  00:13:48,037 - #5 ;
INFO  00:13:48,037 - #4 }
INFO  00:13:48,037 - #4 }
INFO  00:13:48,042 - ==================SINTAKSNO STABLO==================
INFO  00:13:48,043 - Program(
  ProgName(
   test302
  ) [ProgName]
  DeclarationListDeclaration(
    NoDeclarationList(
    ) [NoDeclarationList]
    DeclarationListVar(
      VarDeclarationV(
        VarType(
          Type(
           int
          ) [Type]
        ) [VarType]
        VarDecl(
          IdentArray(
           niz
          ) [IdentArray]
        ) [VarDecl]
      ) [VarDeclarationV]
    ) [DeclarationListVar]
  ) [DeclarationListDeclaration]
  MethodDeclarationListMethod(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    VoidMethodDeclaration(
      MethodVoidName(
       main
      ) [MethodVoidName]
      MethodDeclarationActual(
        NoFormalParamsList(
        ) [NoFormalParamsList]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementListStatement(
          StatementListStatement(
            StatementListStatement(
              StatementListStatement(
                NoStatementList(
                ) [NoStatementList]
                DesignatorStatementStatement(
                  LeftDesignatorAssignExpression(
                    LeftSideAssignVar(
                      DesignatorOnly(
                       int
                      ) [DesignatorOnly]
                    ) [LeftSideAssignVar]
                    AssignOpEqual(
                      AssignOp(
                      ) [AssignOp]
                    ) [AssignOpEqual]
                    ExpressionTermDef(
                      OnlyTerm(
                        TermFactor(
                          FactorDesignator(
                            DesignatorOnly(
                             niz
                            ) [DesignatorOnly]
                          ) [FactorDesignator]
                        ) [TermFactor]
                      ) [OnlyTerm]
                    ) [ExpressionTermDef]
                  ) [LeftDesignatorAssignExpression]
                ) [DesignatorStatementStatement]
              ) [StatementListStatement]
              DesignatorStatementStatement(
                LeftDesignatorAssignExpression(
                  LeftSideAssignVar(
                    DesignatorOnly(
                     niz
                    ) [DesignatorOnly]
                  ) [LeftSideAssignVar]
                  AssignOpEqual(
                    AssignOp(
                    ) [AssignOp]
                  ) [AssignOpEqual]
                  ExpressionTermDef(
                    OnlyTerm(
                      TermFactor(
                        FactorConst(
                          CharConst(
                           c
                          ) [CharConst]
                        ) [FactorConst]
                      ) [TermFactor]
                    ) [OnlyTerm]
                  ) [ExpressionTermDef]
                ) [LeftDesignatorAssignExpression]
              ) [DesignatorStatementStatement]
            ) [StatementListStatement]
            DesignatorStatementStatement(
              LeftDesignatorAssignExpression(
                LeftSideAssignVar(
                  DesignatorOnly(
                   niz
                  ) [DesignatorOnly]
                ) [LeftSideAssignVar]
                AssignOpEqual(
                  AssignOp(
                  ) [AssignOp]
                ) [AssignOpEqual]
                ExpressionTermDef(
                  OnlyTerm(
                    TermFactor(
                      FactorDesignator(
                        DesignatorOnly(
                         null
                        ) [DesignatorOnly]
                      ) [FactorDesignator]
                    ) [TermFactor]
                  ) [OnlyTerm]
                ) [ExpressionTermDef]
              ) [LeftDesignatorAssignExpression]
            ) [DesignatorStatementStatement]
          ) [StatementListStatement]
          DesignatorStatementStatement(
            LeftDesignatorAssignExpression(
              LeftSideAssignVar(
                DesignatorOnly(
                 niz
                ) [DesignatorOnly]
              ) [LeftSideAssignVar]
              AssignOpEqual(
                AssignOp(
                ) [AssignOp]
              ) [AssignOpEqual]
              ExpressionTermDef(
                OnlyTerm(
                  TermFactor(
                    FactorNewTypeExpression(
                      Type(
                       int
                      ) [Type]
                      ExpressionTermDef(
                        OnlyTerm(
                          TermFactor(
                            FactorConst(
                              NumberConst(
                               5
                              ) [NumberConst]
                            ) [FactorConst]
                          ) [TermFactor]
                        ) [OnlyTerm]
                      ) [ExpressionTermDef]
                    ) [FactorNewTypeExpression]
                  ) [TermFactor]
                ) [OnlyTerm]
              ) [ExpressionTermDef]
            ) [LeftDesignatorAssignExpression]
          ) [DesignatorStatementStatement]
        ) [StatementListStatement]
      ) [MethodDeclarationActual]
    ) [VoidMethodDeclaration]
  ) [MethodDeclarationListMethod]
) [Program]
INFO  00:13:48,043 - ==================SEMANTICKA OBRADA==================
INFO  00:13:48,046 - Deklarisan niz niz(Var niz: array, 0, 0 ) na liniji 7
INFO  00:13:48,046 - Obradjuje se funkcija main(Meth main: none, 0, 0 ) na liniji 9
INFO  00:13:48,046 - Koriscenje  int(int: int, -1, -1 ) na liniji 10
ERROR 00:13:48,046 - Greska na liniji 10 : nije moguca dodela necemusto nije varijabla ili element niza!
INFO  00:13:48,046 - Koriscenje  niz(Var niz: array, 0, 0 ) na liniji 10
INFO  00:13:48,046 - Koriscenje  niz(Var niz: array, 0, 0 ) na liniji 11
ERROR 00:13:48,046 - Greska na liniji 11 : nije moguca dodela2!
INFO  00:13:48,046 - Koriscenje  niz(Var niz: array, 0, 0 ) na liniji 12
INFO  00:13:48,046 - Koriscenje  null(Con null: , 0, 0 ) na liniji 12
INFO  00:13:48,047 - Koriscenje  niz(Var niz: array, 0, 0 ) na liniji 13
INFO  00:13:48,047 - ==================SEMANTICKA ANALIZA==============
INFO  00:13:48,047 - 1  methods in the program
INFO  00:13:48,047 - 0  global variables
INFO  00:13:48,047 - 0  global constants
INFO  00:13:48,047 - 1  global arrays
INFO  00:13:48,048 - 0  local variables in main
INFO  00:13:48,048 - 4  statements in main
=====================SYMBOL TABLE DUMP=========================
Type int: int, -1, -1 
Type char: char, -1, -1 
Con eol: char, 10, 0 
Con null: Class [], 0, 0 
Meth chr: char, 0, 1 
   Var i: int, 0, 1 

Meth ord: int, 0, 1 
   Var ch: char, 0, 1 

Meth len: int, 0, 1 
   Var arr: Arr of notype, 0, 1 

Type bool: bool, 0, 1 
Prog test302: notype, 0, 1 
   Var niz: Arr of int, 0, 0 
   Meth main: notype, 0, 0 



ERROR 00:13:48,048 - Program nije semanticki ispravan!
